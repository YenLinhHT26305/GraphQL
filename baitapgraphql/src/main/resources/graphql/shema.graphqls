type Query {
    allProductsSortedByPrice: [Product]
    productsByCategory(categoryId: ID!): [Product]
    users: [User]
    user(id: ID!): User
    products: [Product]
    product(id: ID!): Product
    categories: [Category]
    category(id: ID!): Category
}

type Mutation {
    createUser(input: UserInput!): User
    updateUser(id: ID!, input: UserInput!): User
    deleteUser(id: ID!): Boolean
    createProduct(input: ProductInput!): Product
    updateProduct(id: ID!, input: ProductInput!): Product
    deleteProduct(id: ID!): Boolean
    createCategory(input: CategoryInput!): Category
    updateCategory(id: ID!, input: CategoryInput!): Category
    deleteCategory(id: ID!): Boolean
}

type User {
    id: ID
    fullname: String
    email: String
    password: String
    phone: String
    products: [Product]
}

type Product {
    id: ID
    title: String
    quantity: Int
    desc: String
    price: Float
    user: User
    categories: [Category]
}

type Category {
    id: ID
    name: String
    images: [String]
    products: [Product]
}

input UserInput {
    fullname: String
    email: String
    password: String
    phone: String
}

input ProductInput {
    title: String
    quantity: Int
    desc: String
    price: Float
    userId: ID
    categoryIds: [ID]
}

input CategoryInput {
    name: String
    images: [String]
}